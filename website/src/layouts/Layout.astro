---
import { Dictionary } from "../../../shared/types/Dictionary";
import BottomAnchor from "../components/BottomAnchor.astro";
import GithubCorner from "../components/GithubCorner.astro";

export interface Props {
  title: string;
  headerTitle?: string;
  linkHome?: boolean;
  clearLastVisited?: boolean;
  pageScriptData?: Dictionary<any>;
}

const {
  title,
  headerTitle,
  linkHome,
  clearLastVisited = false,
  pageScriptData = {},
} = Astro.props;
let baseUrl = ((import.meta as any).env.BASE_URL as string) || "";

if (!baseUrl.endsWith("/")) {
  baseUrl = baseUrl + "/";
}
---

<!doctype html>
<html lang="en">
  <head>
    <base href={baseUrl} />
    <meta charset="UTF-8" />
    <meta name="theme-color" content="#0A0C11" />
    <meta
      name="viewport"
      content="width=device-width, initial-scale=1.0, viewport-fit=cover"
    />
    <meta name="generator" content={Astro.generator} />
    <title>{title || headerTitle}</title>
  </head>
  <body
    data-page-script-data={JSON.stringify(pageScriptData || {})}
    class={`
      after:bg-center
      after:bg-cover
      after:bg-no-repeat
      after:bg-pixelguy
      after:block
      after:fixed
      after:left-0
      after:min-h-[100vh]
      after:min-w-[100dvw]
      after:opacity-70
      after:top-0
      after:z-[-100]
      before:bg-black
      before:block
      before:fixed
      before:left-0
      before:min-h-[100vh]
      before:min-w-[100dvw]
      before:top-0
      before:z-[-100]
      block
      min-h-[100dvh]
      relative
    `}
  >
    <GithubCorner />
    <header
      class={`
        before:absolute
        before:backdrop-blur
        before:content['']
        before:inset-0
        before:z-[-1]
        bg-white-alpha-70
        dark:bg-dark-header-footer
        dark:text-white
        pt-safe
        px-safe
        qavs-none
        relative
        text-black
      `}
    >
      <slot name="header">
        <div
          class={`
            block
            font-bold
            p-4
            text-[1.6rem]
            text-center
          `}
        >
          {
            linkHome ? (
              <a
                href={baseUrl}
                onclick={
                  clearLastVisited
                    ? "delete localStorage.lastVisitedModVersion; return true;"
                    : null
                }
              >
                {headerTitle || title}
              </a>
            ) : (
              headerTitle || title
            )
          }
        </div>
        <slot name="header-post-title" />
      </slot>
    </header>
    <div
      class={`
        content
        relative
      `}
      f-client-nav="true"
    >
      <slot />
    </div>
    <BottomAnchor>
      <footer
        class={`
          before:absolute
          before:backdrop-blur
          before:content['']
          before:inset-0
          before:z-[-1]
          bg-white-alpha-70
          bottom-0
          dark:bg-dark-header-footer
          dark:text-white
          left-0
          pt-4
          py-safe-offset-4
          pb-safe-offset-4
          relative
          right-0
          t-center
          text-black
          text-center
        `}
      >
        <p>Beat Saber render by Pixelguy</p>
        <p>
          <a class="link qavs-none" href="generator/">Mod JSON Generator</a>
        </p>
      </footer>
    </BottomAnchor>
  </body>
</html>
<script>
  import { getQavsQueryData } from "../../../shared/types/QavsQueryString";
  import { bindMultiClickAction } from "../../../shared/bindMultiClickAction";
  import { isNullOrWhitespace } from "../../../shared/isNullOrWhitespace";

  const qs = getQavsQueryData();

  if (qs.isQavs) {
    // Create a new style element
    const style = document.createElement("style");

    for (const display of [
      //"auto",
      //"block",
      //"flex",
      //"initial",
      //"inline-block",
      "none",
    ]) {
      style.textContent += `.qavs-${display} { display: ${display} !important; }\n`;
    }

    // Append the style element to the head of the document
    document.head.appendChild(style);

    // 5 clicks on the footer redirects to google.com.
    bindMultiClickAction(
      [...document.querySelectorAll("footer")].at(-1)!,
      () => {
        const defaultUrl = "https://google.com/";
        const result = prompt("Where do you want to go?", defaultUrl);

        if (!isNullOrWhitespace(result)) {
          location.href = result!;
        }
      },
      5
    );
  }
</script>
